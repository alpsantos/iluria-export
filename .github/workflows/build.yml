name: Build and test

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        include:
          - os: ubuntu-latest
            bin_name: iluria-export
            asset_name: iluria-export
          - os: macos-latest
            bin_name: iluria-export
            asset_name: iluria-export_mac
          - os: windows-latest
            bin_name: iluria-export.exe
            asset_name: iluria-export.exe
    name: Build
    runs-on: ${{matrix.os}}
    needs: create_release
    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Install Rust Stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Check with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./target/release/${{ matrix.bin_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream
